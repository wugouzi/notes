#+TITLE: Category Theory In Context

#+AUTHOR: Emily Riehl
#+EXPORT_FILE_NAME: ../latex/CategoryTheoryInContext/CategoryTheoryInContext.tex
#+LATEX_HEADER: \graphicspath{{../../books/}}
#+LATEX_HEADER: \input{preamble.tex}
#+LATEX_HEADER: \def \MODEL {\textbf{MODEL}}
#+LATEX_HEADER: \def \Cop {\calc^{\op}}
#+LATEX_HEADER: \def \fop {f^{\op}}
#+LATEX_HEADER: \def \gop {g^{\op}}
#+LATEX_HEADER: \def \Vect {\textbf{Vect}}
#+LATEX_HEADER: \def \BG {\textsf{B}G}
#+LATEX_HEADER: \def \sk {\text{sk}}
#+LATEX_HEADER: \makeindex

* Categories, Functors, Natural Transformations
** Abstract and concrete categories
    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    A *category* consists of
    * a collection of *objects* \(X,Y,Z,\dots\)
    * a collection of *morphisms* \(f,g,h,\dots\)


    so that
    * Each morphism has specified *domain* and *codomain* objects; the notation \(f:X\to Y\)
      signifies that \(f\) is a morphism with domain \(X\) and codomain \(Y\)
    * Each object has a designated *identity morphism* \(1_X:X\to X\)
    * For any pair of morphisms \(f,g\) with the codomain of \(f\) equal to the domain of \(g\),
      there exists a specified *composite morphism* \(gf\) whose domain is equal to the domain
      of \(f\) and whose codomain is equal to the codomain of \(g\), i.e., :
      \begin{equation*}
      f:X\to Y,\quad g:Y\to Z\hspace{0.7cm}\leadsto\hspace{0.7cm}gf:X\to Z
      \end{equation*}


    This data is subject to the following two axioms
    * For any \(f:X\to Y\), the composites \(1_Yf\) and \(f1_X\) are both equal to \(f\)
    * For any composable triple of morphisms \(f,g,h\), the composites \(h(gf)\) and \((hg)f\) are
      equal and hence denoted by \(hgf\).
      \begin{equation*}
      f:X\to Y,\quad g:Y\to Z,\quad h:Z\to W\hspace{0.7cm}\leadsto\hspace{0.7cm}hgf:X\to W
      \end{equation*}
    #+END_definition

    #+ATTR_LATEX: :options []
    #+BEGIN_examplle
    1. For any language \(\call\) and any theory \(T\) of \(\call\), there is a category \(\MODEL_T\) whose
       objects are models of \(T\). Morphisms is just homomorphisms
    2. For a fixed unital but not necessarily commutative ring \(R\), \(\Mod_R\) is the category of
       left \(R\)-modules and \(R\)-modules homomorphisms. This category is denoted by \(\Vect_{\Bbbk}\)
       when the ring happens to be a field \(\Bbbk\) and abbreviated as \(\Ab\) in the case
       of \(\Mod_{\Z}\), as a \(\Z\)-module is precisely ab abelian group
    #+END_examplle

    *Concrete categories* are those whose objects have underlying sets and whose morphisms are
    functions between underlying sets

    Abstract categories
    #+ATTR_LATEX: :options []
    #+BEGIN_examplle
    1. A group defines a category \(\BG\) with a single object
    2. A category is *discrete* if every morphism is an identity
    #+END_examplle

    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    A category is *small* if it has only a set's worth of arrows

    Both \(\ob(\calc)\) and \(\hom(\calc)\) are sets
    #+END_definition

    Thus it has only a set's worth of objects

    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    A category is *locally small* if between any pair of objects there is only a set's worth of morphisms
    #+END_definition

    The set of arrows between a pair of fixed objects in a locally small category is typically
    called a *hom-set*


    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    An *isomorphism* in a category is a morphism \(f:X\to Y\) for which there exists a
    morphism \(g:Y\to X\) so that \(gf=1_X\) and \(fg=1_X\), denoted by \(X\cong Y\)
    #+END_definition

    An *endomorphism* is a morphism whose domain equals its codomain

    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    A *groupoid* is a category in which every morphism is an isomorphism
    #+END_definition

    #+ATTR_LATEX: :options []
    #+BEGIN_lemma
    Any category \(\calc\) contains a *maximal groupoid*, the subcategory containing all of the objects
    and only those morphisms that are isomorphisms
    #+END_lemma

    #+BEGIN_exercise
    label:1.1.1
    1. Consider a morphism \(f:x\to y\). Show that if there exists a pair of
       morphisms \(g,h:y\rightrightarrows:x\) s.t. \(gf=1_x\) and \(fh=1_y\), then \(g=h\) and \(f\)
       is an isomorphism
    2. Show that a morphism can have at most one inverse isomorphism
    #+END_exercise

    #+BEGIN_proof
    1. \(g=1_xg=(hf)g=h(fg)=h1_y=h\)
    2. From 1
    #+END_proof

    #+BEGIN_exercise
    label:ex1.1.3
    For any category \(\calc\) and any object \(c\in\calc\), show that
    1. There is a category \(c/\calc\) whose objects are morphisms \(f:c\to x\) with domain \(c\) in which
       a morphism from \(f:c\to x\) to \(g:c\to y\) is a map \(h:x\to y\) between the codomains so that
       the triangle
       \begin{center}\begin{tikzcd}[column sep=small]
       &c\ar[dl,"f"']\ar[dr,"g"]\\
       x\ar[rr,"h"']&&y
       \end{tikzcd}\end{center}
       commutes.
    2. There is a category \(\calc/c\) whose objects are morphisms \(f:x\to c\) with codomain \(c\) in which
       a morphism from \(f:x\to c\) to \(g:y\to c\) is a map \(h:x\to y\) between the codomains so that
       the triangle
       \begin{center}\begin{tikzcd}[column sep=small]
       x\ar[rr,"h"]\ar[dr,"f"']&&y\ar[dl,"g"]\\
       &c
       \end{tikzcd}\end{center}
       commutes


    The category \(c/\calc\) and \(\calc/c\) are called *slice categories* of \(\calc\) *under* and *over* \(c\), respectively
    #+END_exercise
** Duality
    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    Let \(\calc\) be any category. The *opposite category* \(\calc^{\op}\) has
    * the same objects as in \(\calc\)
    * a morphism \(\fop\) in \(\Cop\) for each a morphism \(f\) in \(\calc\) so that the domain
      of \(\fop\) is defined to be the codomain of \(f\) and the codomain of \(\fop\) is defined to
      be the domain of \(f\)
    * For each object \(X\), the arrow \(1_X^{\op}\) serves as its identity in \(\Cop\)
    * A pair of morphisms \(\fop,\gop\) in \(\Cop\) is composable precisely when the pair \(g,f\) is
      composable in \(\calc\). We then define \(\gop\circ\fop\) to be \((f\circ g)^{\op}\): i.e.
      \begin{equation*}
      \dom(\fop)=\cod(f)=\dom(g)=\cod(\gop)
      \end{equation*}
    #+END_definition

    #+ATTR_LATEX: :options []
    #+BEGIN_lemma
    label:lemma1.2.3
    T.F.A.E.
    1. \(f:x\to y\) is an isomorphism
    2. For all objects \(c\in\calc\), post-composition with \(f\) defines a bijection
       \begin{equation*}
       f_*:\Hom(c,x)\to\Hom(c,y)
       \end{equation*}
    3. For all objects \(c\in\calc\), pre-composition with \(f\) defines a bijection
       \begin{equation*}
       f^*:\Hom(y,c)\to\Hom(x,c)
       \end{equation*}
    #+END_lemma

    Lemma ref:lemma1.2.3 asserts that isomorphisms in a locally small category are defined
    /representably/ in terms of isomorphisms in the category of sets.

    #+BEGIN_proof
    \(2\to 1\). Let \(c=y\), since \(f_*\) in an bijection, there must be an element \(g\in\Hom(y,x)\)
    s.t. \(f_*(g)=1_y\). Hence \(fg=1_y\). Thus \(gf,1_x\) have common image under \(f_*\),
    thus \(gf=1_x\). Whence \(f\) and \(g\) are inverse isomorphisms
    #+END_proof

    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    A morphism \(f:x\to y\) in a category is
    1. a *monomorphism* if for any parallel morphisms \(h,k:w\rightrightarrows x\), \(fg=fk\) implies
       that \(h=k\)
    2. an *epimorphism* if for any parallel morphisms \(h,k:w\rightrightarrows x\), \(hf=kf\) implies
       that \(h=k\)
    #+END_definition

    Also, we can re-express it
    1. \(f:x\to y\) is a monomorphism in \(\calc\) iff for all
       objects \(c\in\calc\), \(f_*:\Hom(c,x)\to\Hom(c,y)\) is injective
    2. \(f:x\to y\) is an epimorphism in \(\calc\) iff for all \(c\in\calc\), \(f^*:\Hom(y,c)\to\Hom(x,c)\)  is
       injective


    #+ATTR_LATEX: :options []
    #+BEGIN_examplle
    Suppose that \(x\xrightarrow{s}y\xrightarrow{r}x\) are morphisms s.t. \(rs=1_x\). The map \(s\) is a *section* or *right
    inverse* to \(r\), while the map \(r\) defines a *retraction* or *left inverse* to \(s\). The
    maps \(s\) and \(r\) express the object \(x\) as a *retract* of the object \(y\)

    In this case, \(s\) is always a monomorphism and, dually, \(r\) is always an epimorphism. To
    ackowledge the presence of these one-sided inverses, \(s\) is said to be a *split monomorphism*
    and \(r\) is said to be a *split epimorphism*
    #+END_examplle

    #+ATTR_LATEX: :options []
    #+BEGIN_examplle
    By the previous example, an isomorphism is necessarily both monic and epic, but the converse
    need not hold in general. For example, the inclusion \(\Z\hookrightarrow\Q\) is both monic and epic in the
    category \(\Rng\), but this map is not an isomorphism: there are no ring homomorphisms
    from \(\Q\) to \(\Z\)
    #+END_examplle

    #+ATTR_LATEX: :options []
    #+BEGIN_lemma
    1. If \(f:x\rightarrowtail y\) and \(g:y\rightarrowtail z\) are monomorphisms, then so
       is \(gf:x\rightarrowtail z\)
    2. If \(f:x\to y\) and \(g:y\to z\) are morphisms so that \(gf\) is monic, then \(f\) is monic


    Dually
    1. If \(f:x\twoheadrightarrow y\) and \(g:y\twoheadrightarrow z\) are epimorphisms, then so
       is \(gf:x\twoheadrightarrow z\)
    2. If \(f:x\to y\) and \(g:y\to z\) are morphisms so that \(gf\) is epic, then \(g\) is epic
    #+END_lemma

    #+BEGIN_exercise
    label:ex1.2.2
    1. Show that a morphism \(f:x\to y\) is a split epimorphism in a category \(\calc\) iff for
       all \(c\in\calc\), the post-composition function \(f_*:\Hom(c,x)\to\Hom(c,y)\) is surjective
    2. Show that a morphism \(f:x\to y\) is a split monomorphism in a category \(\calc\) iff for
       all \(c\in\calc\), the post-composition function \(f^*:\Hom(y,c)\to\Hom(x,c)\) is surjective
    #+END_exercise

    #+BEGIN_exercise
    label:ex1.2.6
    Prove that a morphism that is both a monomorphism and a split epimorphism is necessarily an
    isomorphism. Argue by duality that a split monomorphism that is an epimorphism is also an isomorphism
    #+END_exercise

    #+BEGIN_proof
    Suppose \(y\xrightarrow{g}x\xrightarrow{f}y\) and \(fg=1_y\), then \(fgf=f=f\circ 1_x\). Since \(f\) is mono, \(gf=1_x\)
    #+END_proof
** Functoriality
    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    A *functor* \(F:\calc\to\cald\), between categories \(\calc\) and \(\cald\), consists of the following data:
    * An object \(Fc\in\cald\), for each objects \(c\in\calc\)
    * A morphism \(Ff:Fc\to Fc'\in\cald\), for each morphism \(f:c\to c'\in\calc\)


    *Functoriality axioms*
    * For any composable pair \(f,g\in\calc\), \(Fg\circ Ff=F(g\circ f)\)
    * For each object \(c\in\calc\), \(F(1_c)=1_{Fc}\)
    #+END_definition

    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    A *contravariant functor* \(F\) from \(\calc\) to \(\cald\) is a functor \(F:\Cop\to\cald\)
    * A morphism \(Ff:Fc'\to Fc\in\cald\) for each morphism \(f:c\to c'\in\calc\)
    * For any composable pair \(f,g\in\calc\), \(Ff\circ Fg=F(g\circ f)\)
    #+END_definition

    \begin{center}\begin{tikzcd}
    \Cop\ar[r,"F"]&\cald\\
    c\ar[r,mapsto]\ar[dd,"f"']&Fc\\
    {}\ar[r,mapsto]&{}\\
    c'\ar[r,mapsto]&Fc'\ar[uu,"Ff"']
    \end{tikzcd}\end{center}

    #+ATTR_LATEX: :options []
    #+BEGIN_lemma
    Functors preserve isomorphisms
    #+END_lemma

    #+BEGIN_proof
    Consider a functor \(F:\calc\to\cald\) and an isomorphism \(f:x\to y\) in \(\calc\) with inverse \(g:y\to x\).
    Then
    \begin{equation*}
    F(g)F(f)=F(gf)=F(1_x)=1_{Fx}
    \end{equation*}
    Thus \(Fg:Fy\to Fx\) is a left inverse to \(Ff:Fx\to Fy\)
    #+END_proof

    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    If \(\calc\) is locally small, then for any object \(c\in\calc\) we may define a pair of covariant and
    contravariant *functors represented by* \(c\):
    \begin{center}\begin{tikzcd}[column sep=tiny]
    \calc\ar[rrr,"{\Hom(c,-)}"]&\quad&\quad&\Sets\\
    x\ar[dd,"f"']&\ar[r,mapsto]&{}&\Hom(c,x)\ar[dd,"f_*"]\\
    {}&\ar[r,mapsto]&{}&{}\\
    y&\ar[r,mapsto]&{}&\Hom(c,y)
    \end{tikzcd}\hspace{1cm}
    \begin{tikzcd}[column sep=tiny]
    \Cop\ar[rrr,"{\Hom(-,c)}"]&\quad&\quad&\Sets\\
    x\ar[dd,"f"']&\ar[r,mapsto]&{}&\Hom(x,c)\\
    {}&\ar[r,mapsto]&{}&{}\\
    y&\ar[r,mapsto]&{}&\Hom(y,c)\ar[uu,"f^*"]
    \end{tikzcd}
    \end{center}

    #+END_definition

    Post-composition defines a *covariant* action on hom-sets

    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    For any categories \(\calc\) and \(\cald\), there is a category \(\calc\times\cald\), their *product*, whose
    * objects are ordered pairs \((c,d)\), where \(c\) is an object of \(\calc\) and \(d\) is an object
      of \(\cald\)
    * morphisms are ordered pairs \((f,g):(c,d)\to(c',d')\), where \(f:c\to c'\in\calc\) and \(g:d\to d'\in\cald\) and
    * in which composition and identities are defined componentwise
    #+END_definition

    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    If \(\calc\) is locally small, then there is a *two-sided represented functor*
    \begin{equation*}
    \calc(-,-):\Cop\times\calc\to\Sets
    \end{equation*}
    A pair of objects \((x,y)\) is mapped to the hom-set \(\Hom(x,y)\). A pair of
    morphisms \(f:w\to x\) and \(h:y\to z\) is sent to the function
    \begin{center}\begin{tikzcd}
    \Hom(x,y)\ar[r,"{(f^*,h_*)}"]&\Hom(w,z)\\
    g\ar[r,mapsto]&hgf
    \end{tikzcd}\end{center}


    #+END_definition

    An *isomorphism of categories* is given by a pair of inverse functors \(F:\calc\to\cald\) and \(G:\cald\to\calc\) s.t.
    the composites \(Gf\) and \(FG\), respectively, equal the identity functors on \(\calc\) and \(\cald\)
** Naturality
    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    Given categories \(\calc\) and \(\cald\) and functors \(F,G:\calc\rightrightarrows\cald\), a *natural
    transformation* \(\alpha:F\Rightarrow G\) consists of
    * an arrow \(\alpha_c:Fc\to Gc\) in \(\cald\) for each object \(c\in\calc\), the collection of which define the
      *components* of the natural transformation s.t. for any morphism \(f:c\to c'\) in \(\calc\), the
      following square of morphisms in \(\cald\)
      \begin{center}\begin{tikzcd}
      Fc\ar[r,"\alpha_c"]\ar[d,"Ff"']&Gc\ar[d,"Gf"]\\
      Fc'\ar[r,"\alpha_{c'}"']&Gc'
      \end{tikzcd}\end{center}
      *commutes*


    A *natural isomorphism* is a natural transformation \(\alpha:F\Rightarrow G\) in which every component \(\alpha_c\) is
    an isomorphism. In this case, the natural isomorphism may be depicted as \(\alpha:F\cong G\)

    \begin{center}\begin{tikzcd}
    A\ar[r,bend left=50,""{name=U}]\ar[r,bend right=50,""{name=D}]&B
    \ar[Rightarrow,from=U,to=D,yshift=-3pt,"\alpha"]
    \end{tikzcd}\end{center}

    #+END_definition

    #+ATTR_LATEX: :options []
    #+BEGIN_examplle
    Consider morphism \(f:w\to x\) and \(h:y\to z\) in a locally small category \(C\). Post-composition
    by \(h\) and pre-composition by \(f\) define functions between hom-sets
    \begin{center}\begin{tikzcd}
    C(x,y)\ar[r,"h\circ-"]\ar[d,"-\circ f"]&C(x,z)\ar[d,"-\circ f"]\\
    C(w,y)\ar[r,"h\circ -"']&C(w,z)
    \end{tikzcd}\end{center}
    \(h\circ -\) is denoted by \(h_*\) and \(-\circ f\) is denoted by \(f^*\). By interpreting the
    horizontal arrows as the image of \(h\) under the actions of the functors \(C(x,-)\)
    and \(C(w,-)\), the square demonstrates that there is a natural transformation
    \begin{equation*}
    f^*:C(x,-)\Rightarrow C(w,-)
    \end{equation*}
    #+END_examplle

    #+BEGIN_exercise
    label:ex1.4.6
    Given a pair of functors \(F:\bA\times \bB\times \bB^{\op}\to \bD\) and \(G:\bA\times \bC\times \bC^{\op}\to \bD\), a family of
    morphisms
    \begin{equation*}
    \alpha_{a,b,c}:F(a,b,b)\to G(a,c,c)
    \end{equation*}
    in \(\bD\) defines the components of an *extranatural transformation* \(\alpha:F\Rightarrow G\) if for
    any \(f:a\to a'\), \(g:b\to b'\) and \(h:c\to c'\) the following diagram commutes
    \begin{center}\begin{tikzcd}
    F(a,b,b)\ar[r,"{\alpha_{a,b,c}}"]\ar[d,"{F(f,1_b,1_b)}" description]&G(a,c,c)\ar[d,"{G(f,1_c,1_c)}" description]\\
    F(a',b,b)\ar[r,"{\alpha_{a',b,c}}"']&G(a',c,c)
    \end{tikzcd}\begin{tikzcd}
    F(a,b,b')\ar[r,"{F(1_a,1_b,g)}"]\ar[d,"{F(1_a,g,1_{b'})}" description]&F(a,b,b)\ar[d,"{\alpha_{a,b,c}}" description]\\
    F(a,b',b')\ar[r,"{\alpha_{a,b',c}}"']&G(a,c,c)
    \end{tikzcd}\begin{tikzcd}
    F(a,b,b)\ar[r,"{\alpha_{a,b,c}}"]\ar[d,"{F(f,1_b,1_b)}" description]&G(a,c,c)\ar[d,"{G(f,1_c,1_c)}" description]\\
    F(a',b,b)\ar[r,"{\alpha_{a',b,c}}"']&G(a',c,c)
    \end{tikzcd}
    \end{center}
    #+END_exercise
** Equivalence of categories
    Let \(\bbone\) denote the discrete category with a single object and let \(\bbtwo\) denote the
    category with two objects \(0,1\in\bbtwo\) and a single non-identity arrow \(0\to 1\). There are two
    evident functors \(i_0,i_1:\bbone\rightrightarrows\bbtwo\) whose subscripts designate the objects
    in their image

    #+ATTR_LATEX: :options []
    #+BEGIN_lemma
    Fixing a parallel pair of functors \(F,G:\bC\rightrightarrows\bD\), natural
    transformations \(\alpha:F\Rightarrow G\) correspond bijectively to functors \(H:\bC\times\bbtwo\to\bD\) s.t. \(H\)
    restricts along \(i_0\) and \(i_1\) to the functors \(F,G\), i.e., so that
    \begin{center}\begin{tikzcd}
    \bC\ar[r,"i_0"]\ar[rd,"F"']&\bC\times 2\ar[d,"H"]&\bC\ar[l,"i_1"']\ar[ld,"G"]\\
    &\bD
    \end{tikzcd}\end{center}
    commutes
    #+END_lemma

    Hence \(i_0\) denotes the functor defined on objects by \(c\mapsto(c,0)\)

    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    An *equivalence of categories* consists of functors \(F:\bC\leftrightarrows \bD:G\) together with
    natural isomorphisms \(\eta:1_{\bC}\cong GF\), \(\epsilon:FG\cong 1_{\bD}\). Categories \(\bC\)  and \(\bD\) are
    *equivalent*, written \(\bC\simeq\bD\), if there exists an equivalence between them
    #+END_definition

    #+ATTR_LATEX: :options []
    #+BEGIN_lemma
    If \(\bC\simeq\bD\) and \(\bD\simeq\bE\), then \(\bC\simeq\bE\)
    #+END_lemma

    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    A functor \(F:\bC\to\bD\) is
    * *full* if for each \(x,y\in\bC\), the map \(\bC(x,y)\to \bD(Fx,Fy)\) is surjective
    * *faithful* if for each \(x,y\in\bC\), the map \(\bC(x,y)\to\bD(Fx,Fy)\) is injective
    * *essentially surjective on objects* if for every object \(d\in\bD\) there is \(c\in\C\) s.t. \(d\) is
      isomorphic to \(Fc\)
    #+END_definition

    #+ATTR_LATEX: :options []
    #+BEGIN_lemma
    label:lemma1.5.10
    Any morphism \(f:a\to b\) and fixed isomorphism \(a\cong a'\) and \(b\cong b'\) determine a unique
    morphism \(f':a'\to b'\) so that any of - or, equivalently, all of - the following four diagrams
    commutes
    \begin{center}\begin{tikzcd}
    a\ar[d,"f"']&a'\ar[l,"\cong"']\ar[d,"f'"]\\
    b\ar[r,"\cong"']&b'
    \end{tikzcd}\begin{tikzcd}
    a\ar[r,"\cong"]\ar[d,"f"']&a'\ar[d,"f'"]\\
    b\ar[r,"\cong"']&b'
    \end{tikzcd}\begin{tikzcd}
    a\ar[d,"f"']&a'\ar[l,"\cong"']\ar[d,"f'"]\\
    b&b'\ar[l,"\cong"]
    \end{tikzcd}\begin{tikzcd}
    a\ar[r,"\cong"]\ar[d,"f"']&a'\ar[d,"f'"]\\
    b&b'\ar[l,"\cong"]
    \end{tikzcd}\end{center}
    #+END_lemma

    #+ATTR_LATEX: :options [characterizing equivalences of categories]
    #+BEGIN_theorem
    label:thm1.5.9
    A functor defining an equivalence of categories is full, faithful and essentially surjective on
    objects. Assuming the axiom of choice, any functor with these properties defines an equivalence
    of categories
    #+END_theorem

    #+BEGIN_proof
    First suppose that \(F:\bC\leftrightarrows\bD:G\), \(\eta:1_{\bC}\cong GF\) and \(\epsilon:FG\cong 1_{\bD}\) define an
    equivalence of categories. For any \(d\in\bD\), the component of the natural
    isomorphism \(\epsilon_d:FGd\cong d\) demonstrates that \(F\) is essentially surjective. Consider a
    parallel pair \(f,g:c\rightrightarrows c'\) in \(\bC\). If \(Ff=Fg\), then both \(f\) and \(g\)
    define an arrow \(c\to c'\) making the diagram
    \begin{center}\begin{tikzcd}
    c\ar[r,"\eta_c","\cong"']\ar[d,"f\text{ or }g" description]&GFc\ar[d,"GFf=GFg" description]\\
    c'\ar[r,"cong","\eta_{c'}"']&GFc'
    \end{tikzcd}\end{center}
    that expresses the naturality of \eta commute. Lemma implies that there is a unique arrow \(c\to c'\)
    with this property, whence \(f=g\). Thus \(F\) is faithful and by symmetry, so is \(G\).
    Given \(k:Fc\to Fc'\), by Lemma ref:lemma1.5.10, \(Gk\) and the isomorphism \(\eta_c\) and \(\eta_{c'}\)
    define a unique \(h:c\to c'\) for which both \(Gk\) and \(GFh\) make the diagram
    \begin{center}\begin{tikzcd}
    c\ar[r,"\eta_c","\cong"']\ar[d,dashed,"h"']&GFc\ar[d,"Gk\text{ or }GFh" description]\\
    c'\ar[r,"\cong","\eta_{c'}"']&GFc'
    \end{tikzcd}\end{center}
    commute. By Lemma ref:lemma1.5.10, \(GFh=Gk\)

    For the converse, suppose now that \(F:\bC\to\bD\) is full, faithful and essentially surjective on
    objects. Using essential surjectivity and the axiom of choice, choose, for each \(d\in\bD\), an
    object \(Gd\in\bC\) and an isomorphism \(\epsilon_d:FGd\cong d\). For each \(l:d\to d'\), Lemma ref:lemma1.5.10
    defines a unique morphism making the square
    \begin{center}\begin{tikzcd}
    FGd\ar[r,"\epsilon_d","\cong"']\ar[d,dashed]&d\ar[d,"l"]\\
    FGd'\ar[r,"\cong","\epsilon_{d'}"']&d'
    \end{tikzcd}\end{center}
    commute. Since \(F\) is fully faithful, there is a unqiue morphism \(Gd\to G'\) with this image
    under \(F\), which we define to be \(Gl\).
    #+END_proof

    A category is *connected* if any pair of objects can be connected by a finite zig-zag of morphisms

    #+ATTR_LATEX: :options []
    #+BEGIN_proposition
    Any connected groupoid is equivalent, as a category, to the automorphism group of any of its objects.
    #+END_proposition

    #+BEGIN_proof
    Choose any object \(g\) of a connected groupoid \(\bG\) and let \(G=\bG(g,g)\) denote its
    automorphism group. The inclusion \(\bB G\hookrightarrow\bG\) mapping the unique object of \(\bB G\) to \(g\in\bG\) is
    full and faithful, by definition, and essentially surjective, since \(\bG\) was assumed to be
    connected. Apply Theorem ref:thm1.5.9
    #+END_proof

    #+ATTR_LATEX: :options []
    #+BEGIN_definition
    A category \(\bC\) is *skeletal* if it contains just one object in each isomorphism class. The
    *skeleton* \(\sk\bC\) of a category \(\bC\) is the unique skeletal category that is equivalent to \(\bC\)
    #+END_definition
