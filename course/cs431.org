#+title: Cs431: Concurrent Programming

#+AUTHOR: Jeehoon Kang
#+LATEX_HEADER: \input{/Users/wu/notes/preamble.tex}
#+LATEX_HEADER: \graphicspath{{../../books/}}
#+LATEX_HEADER: \makeindex
#+STARTUP: shrink

* Lock-based concurrency
        Unsafe:
        #+begin_src c++
// date: Lock<int>
auto data_guard = data.lock();
auto data_ptr = (int *)&data_guard;
// ..
// data_guard is dropped, lock is released
*data_ptr = 666; // UNSAFE
        #+end_src

        Solution: Rust's type system based on *ownership* and *lifetime*
