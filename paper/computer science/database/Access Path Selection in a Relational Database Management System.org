#+title: Access Path Selection In A Relational Database Management System
#+AUTHOR: Selinger

#+EXPORT_FILE_NAME: ../latex/paper/computer science/database/selinger.tex
#+LATEX_HEADER: \input{../../preamble.tex}

* Processing of an SQL statement
    A *query block* is represented by a SELECT list, a FROM list, and a WHERE tree.

    Finally the OPTIMIZER performs access path selection:
    1. determines evaluation order among the query blocks
    2. for each query block, the relations in the FROM list are processed.

       If there is more than one relation in a block, permutations of the join order and of the
       method of joining are evaluated. The access paths that minimize total cost for the block are
       chosen from a tree of alternate path choices.

    After a plan is chosen for each query block and represented in the parse tree, the CODE
    GENERATOR is called. The CODE GENERATOR is a table-driven program which translates ASL trees
    into machine language code to execute the plan chosen by the OPTIMIZER. In doing this it uses a
    relatively small number of code templates, one for each type of join method (including no join).
* Access path selection for joins
    *Outer* relation is the relation from which a tuple will be retrieved first.

    For 2-way joins, one of nested join and merging scans is optimial or near-optimal.

    Merging scans requires the outer and inner relations to be scanned in join column order.
